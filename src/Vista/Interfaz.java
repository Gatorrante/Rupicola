/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Clase.TiroParabolico;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.ChartFactory;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.ChartPanel;

/*
 * @author Diego Miñano
 */
public class Interfaz extends javax.swing.JFrame {

    double velocidadI, angulo, tiempo;
    TiroParabolico tp = new TiroParabolico();

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Curso Integrador Entrega 1");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calcAltBtn = new javax.swing.JButton();
        calcTiempoVueloBtn = new javax.swing.JButton();
        btnVel = new javax.swing.JButton();
        calcAlcanceBtn = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtVel = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        txtAng = new javax.swing.JTextField();
        jPanelResultado = new javax.swing.JPanel();
        Resultado = new javax.swing.JTextField();
        btnGraficar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtTiempo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        calcAltBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        calcAltBtn.setText(" Altura Máxima");
        calcAltBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcAltBtnActionPerformed(evt);
            }
        });

        calcTiempoVueloBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        calcTiempoVueloBtn.setText("Calcular Tiempo");
        calcTiempoVueloBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcTiempoVueloBtnActionPerformed(evt);
            }
        });

        btnVel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVel.setText("Velocidad");
        btnVel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVelActionPerformed(evt);
            }
        });

        calcAlcanceBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        calcAlcanceBtn.setText("Alcance Maximo");
        calcAlcanceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcAlcanceBtnActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Velocidad Inicial:");

        jLabel2.setText("Ingresa Angulo de tiro:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("APLICATIVO CALCULO DE TIRO");

        jLabel4.setText("Desarrollado por Diego Miñano y José Salirrosas");

        jLabel5.setText("m/s");

        jSlider1.setMajorTickSpacing(45);
        jSlider1.setMaximum(180);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        txtAng.setToolTipText("");
        txtAng.setName("grados"); // NOI18N
        txtAng.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAngMouseClicked(evt);
            }
        });
        txtAng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAngActionPerformed(evt);
            }
        });

        jPanelResultado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanelResultadoLayout = new javax.swing.GroupLayout(jPanelResultado);
        jPanelResultado.setLayout(jPanelResultadoLayout);
        jPanelResultadoLayout.setHorizontalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 698, Short.MAX_VALUE)
        );
        jPanelResultadoLayout.setVerticalGroup(
            jPanelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        Resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultadoActionPerformed(evt);
            }
        });

        btnGraficar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGraficar.setForeground(new java.awt.Color(0, 0, 102));
        btnGraficar.setText("INICIAR SIMULACION");
        btnGraficar.setToolTipText("");
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Tiempo:");

        txtTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTiempoActionPerformed(evt);
            }
        });

        jLabel7.setText("seg.");

        jLabel8.setText("grados");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(415, 415, 415)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnVel, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calcAltBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jSlider1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtVel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAng, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel8)))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(calcTiempoVueloBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(calcAlcanceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(Resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(367, 367, 367))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(303, 303, 303))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSalir)
                                .addGap(396, 396, 396))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 108, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtVel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(Resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel3)
                        .addGap(34, 34, 34)
                        .addComponent(btnGraficar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(calcTiempoVueloBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calcAlcanceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calcAltBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        txtAng.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcAltBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcAltBtnActionPerformed

         try {
        velocidadI = Double.parseDouble(txtVel.getText());
        angulo = Double.parseDouble(txtAng.getText());

        if (velocidadI > 0 && angulo > 0 && angulo < 90) {
            double alturaMaxima = tp.calalturamaxima(velocidadI, angulo);
            
            DecimalFormat df = new DecimalFormat("#.###");
            String alturaMaximaFormateada = df.format(alturaMaxima);

            Resultado.setText("El proyectil se encuentra a " + alturaMaximaFormateada + " metros de altura.");
            jTextArea1.setText("Cálculo de Altura Máxima:\n");
            jTextArea1.append("Se utilizó la fórmula: H = (V₀² * sin²(θ)) / (2 * g)\n");
            jTextArea1.append("Donde V₀ es la velocidad inicial, θ es el ángulo y g es la gravedad (9.81 m/s²).\n");
            jTextArea1.append("Con los valores ingresados:\n");
            jTextArea1.append("Velocidad inicial (V₀): " + velocidadI + " m/s\n");
            jTextArea1.append("Ángulo (θ): " + angulo + " grados\n");
            jTextArea1.append("La altura máxima calculada es: " + alturaMaximaFormateada + " metros\n");

            GraficaAlturaMax();
        } else {
            JOptionPane.showMessageDialog(null, "ERROR: Los datos ingresados no corresponden a un movimiento parabólico válido.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente.");
        txtVel.setText(null);
        txtAng.setText(null);
    }


    }//GEN-LAST:event_calcAltBtnActionPerformed

    private void calcTiempoVueloBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcTiempoVueloBtnActionPerformed
        try {
        velocidadI = Double.parseDouble(txtVel.getText());
        angulo = Double.parseDouble(txtAng.getText());
        double tiempoVuelo = tp.tiempodevuelo(velocidadI, angulo);

        DecimalFormat df = new DecimalFormat("#.###");
        String tiempoVueloFormateado = df.format(tiempoVuelo);

        Resultado.setText("El tiempo de vuelo es de " + tiempoVueloFormateado + " segundos");
        txtTiempo.setText(tiempoVueloFormateado);
        
        jTextArea1.setText("Cálculo del Tiempo de Vuelo:\n");
        jTextArea1.append("Se utilizó la fórmula: T = (2 * V₀ * sin(θ)) / g\n");
        jTextArea1.append("Donde V₀ es la velocidad inicial, θ es el ángulo y g es la gravedad (9.81 m/s²).\n");
        jTextArea1.append("Con los valores ingresados:\n");
        jTextArea1.append("Velocidad inicial (V₀): " + velocidadI + " m/s\n");
        jTextArea1.append("Ángulo (θ): " + angulo + " grados\n");
        jTextArea1.append("El tiempo de vuelo calculado es: " + tiempoVueloFormateado + " segundos\n");

        GraficaTiempoVuelo(tiempoVuelo);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
        txtVel.setText(null);
        txtAng.setText(null);
        txtVel.requestFocus();
    }
    }//GEN-LAST:event_calcTiempoVueloBtnActionPerformed

    private void btnVelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVelActionPerformed
        try {
        velocidadI = Double.parseDouble(txtVel.getText());
        angulo = Double.parseDouble(txtAng.getText());

        double velocidad = tp.velocidad(velocidadI, angulo, tiempo);

        DecimalFormat df = new DecimalFormat("#.###");
        String velocidadFormateada = df.format(velocidad);

        Resultado.setText("La velocidad en el tiempo especificado es de " + velocidadFormateada + " m/s");
        
        jTextArea1.setText("Cálculo de la Velocidad:\n");
        jTextArea1.append("Se utilizó la fórmula: V = V₀ + a * t\n");
        jTextArea1.append("Donde V₀ es la velocidad inicial, a es la aceleración y t es el tiempo.\n");
        jTextArea1.append("Con los valores ingresados:\n");
        jTextArea1.append("Velocidad inicial (V₀): " + velocidadI + " m/s\n");
        jTextArea1.append("Ángulo (θ): " + angulo + " grados\n");
        jTextArea1.append("El tiempo especificado es: " + tiempo + " segundos\n");
        jTextArea1.append("La velocidad calculada es: " + velocidadFormateada + " m/s\n");

        GraficaVel();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
        txtVel.setText(null);
        txtAng.setText(null);
        txtVel.requestFocus();
    }

    }//GEN-LAST:event_btnVelActionPerformed

    private void calcAlcanceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcAlcanceBtnActionPerformed
         try {
        velocidadI = Double.parseDouble(txtVel.getText());
        angulo = Double.parseDouble(txtAng.getText());

        double alcanceMaximo = tp.caldistanciamaxima(velocidadI, angulo);

        DecimalFormat df = new DecimalFormat("#.###");
        String alcanceMaximoFormateado = df.format(alcanceMaximo);

        Resultado.setText("El proyectil se encuentra a " + alcanceMaximoFormateado + " metros de distancia");

        jTextArea1.setText("Cálculo del Alcance Máximo:\n");
        jTextArea1.append("Se utilizó la fórmula: R = (V₀² * sin(2θ)) / g\n");
        jTextArea1.append("Donde V₀ es la velocidad inicial, θ es el ángulo y g es la gravedad (9.81 m/s²).\n");
        jTextArea1.append("Con los valores ingresados:\n");
        jTextArea1.append("Velocidad inicial (V₀): " + velocidadI + " m/s\n");
        jTextArea1.append("Ángulo (θ): " + angulo + " grados\n");
        jTextArea1.append("El alcance máximo calculado es: " + alcanceMaximoFormateado + " metros\n");

        GraficaAlcanceMax();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente");
        txtVel.setText(null);
        txtAng.setText(null);
        txtVel.requestFocus();
    }


    }//GEN-LAST:event_calcAlcanceBtnActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // cerrar ventana
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged

        txtAng.setText(Integer.toString(jSlider1.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void txtAngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAngActionPerformed
        try {
            int grados = Integer.parseInt(txtAng.getText().replace("°", "").trim());
            if (grados >= jSlider1.getMinimum() && grados <= jSlider1.getMaximum()) {
                jSlider1.setValue(grados);
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un valor entre " + jSlider1.getMinimum() + " y " + jSlider1.getMaximum() + " grados.");
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor numérico válido seguido por el símbolo de grados (°).");
        }

    }//GEN-LAST:event_txtAngActionPerformed

    private void txtAngMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAngMouseClicked
        txtAng.setText("");
    }//GEN-LAST:event_txtAngMouseClicked

    private void ResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResultadoActionPerformed

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed

        try {
        XYSeriesCollection oDataset = new XYSeriesCollection();

        velocidadI = Double.parseDouble(txtVel.getText());
        angulo = Double.parseDouble(txtAng.getText());

        DecimalFormat df = new DecimalFormat("#.###");
        String alturaMaximaFormateada = df.format(tp.calalturamaxima(velocidadI, angulo));
        XYSeries alturaMaximaSeries = new XYSeries("Altura Máxima es: " + alturaMaximaFormateada + " metros");

        String velocidadFormateada = df.format(tp.velocidad(velocidadI, angulo, tiempo));
        XYSeries velocidadSeries = new XYSeries("Velocidad es: " + velocidadFormateada + " m/s");

        String alcanceMaximoFormateado = df.format(tp.caldistanciamaxima(velocidadI, angulo));
        XYSeries alcanceMaximoSeries = new XYSeries("Alcance Máximo es: " + alcanceMaximoFormateado + " metros");
        
        Timer timer = new Timer(3, new ActionListener() {
            private int index = 0;

            @Override
            public void actionPerformed(ActionEvent e) {
                if (index <= 100) {
                    double tiempoActual = tp.tiempodevuelo(velocidadI, angulo) * (index / 100.0);
                    double altura = tp.altura(velocidadI, angulo, tiempoActual);
                    double velocidad = tp.velocidad(velocidadI, angulo, tiempoActual);
                    double distancia = tp.alcancemax(velocidadI, angulo, tiempoActual);

                    alturaMaximaSeries.add(tiempoActual, altura);
                    velocidadSeries.add(tiempoActual, velocidad);
                    alcanceMaximoSeries.add(tiempoActual, distancia);

                    oDataset.removeAllSeries();
                    oDataset.addSeries(alturaMaximaSeries);
                    oDataset.addSeries(velocidadSeries);
                    oDataset.addSeries(alcanceMaximoSeries);

                    JFreeChart oChart = ChartFactory.createXYLineChart("Resultados", "Tiempo", "Altura", oDataset, PlotOrientation.VERTICAL, true, false, false);
                    ChartPanel oPanel = new ChartPanel(oChart);

                    jPanelResultado.setLayout(new java.awt.BorderLayout());
                    jPanelResultado.add(oPanel);
                    jPanelResultado.validate();

                    index++;
                } else {
                    ((Timer) e.getSource()).stop();
                }
            }
        });

        timer.start();

        jTextArea1.setText("Simulación del Tiro Parabólico:\n");
        jTextArea1.append("En esta gráfica, se representan tres variables importantes:\n");
        jTextArea1.append("1. Altura Máxima: Calculada usando la fórmula H = (V₀² * sin²(θ)) / (2 * g)\n");
        jTextArea1.append("2. Velocidad: Calculada usando la fórmula V = V₀ + a * t\n");
        jTextArea1.append("3. Alcance Máximo: Calculado usando la fórmula R = (V₀² * sin(2θ)) / g\n");
        jTextArea1.append("Donde V₀ es la velocidad inicial, θ es el ángulo y g es la gravedad (9.81 m/s²).\n");
        jTextArea1.append("Se muestra la evolución de estas variables en función del tiempo desde \n el lanzamiento hasta que el proyectil toca el suelo nuevamente.\n");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese los datos correctamente.");
        txtVel.setText(null);
        txtAng.setText(null);
    }
    }//GEN-LAST:event_btnGraficarActionPerformed

    private void txtTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTiempoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });

    }

    private void GraficaAlturaMax() {

        String tiempoText = txtTiempo.getText();

        double tiempo = Double.parseDouble(tiempoText);

        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries alturaMaximaSeries = new XYSeries("Altura Máxima");

        for (int t = 0; t <= tiempo; t++) {
            double altura = tp.altura(velocidadI, angulo, t);
            alturaMaximaSeries.add(t, altura);
        }

        dataset.addSeries(alturaMaximaSeries);

        JFreeChart chart = ChartFactory.createXYLineChart("Altura Máxima", "Tiempo (s)", "Altura (m)", dataset, PlotOrientation.VERTICAL, true, false, false);
        ChartPanel chartPanel = new ChartPanel(chart);

        jPanelResultado.removeAll();
        jPanelResultado.setLayout(new java.awt.BorderLayout());
        jPanelResultado.add(chartPanel);
        jPanelResultado.validate();
    }

    private void GraficaTiempoVuelo(double tiempoVuelo) {
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries tiempoVueloSeries = new XYSeries("Tiempo de Vuelo");

        double intervaloTiempo = tiempoVuelo / 10.0;
        for (double t = 0; t <= tiempoVuelo; t += intervaloTiempo) {
            tiempoVueloSeries.add(t, 0);
        }

        dataset.addSeries(tiempoVueloSeries);

        JFreeChart chart = ChartFactory.createXYLineChart("Tiempo de Vuelo", "Tiempo (s)", "Altura (m)", dataset, PlotOrientation.VERTICAL, true, false, false);
        ChartPanel chartPanel = new ChartPanel(chart);

        jPanelResultado.removeAll();
        jPanelResultado.setLayout(new java.awt.BorderLayout());
        jPanelResultado.add(chartPanel);
        jPanelResultado.validate();
    }

    private void GraficaVel() {

        String tiempoText = txtTiempo.getText();

        double tiempo = Double.parseDouble(tiempoText);

        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries velocidadSeries = new XYSeries("Velocidad");

        for (int t = 0; t <= tiempo; t++) {
            double velocidad = tp.velocidad(velocidadI, angulo, t);
            velocidadSeries.add(t, velocidad);
        }

        dataset.addSeries(velocidadSeries);

        JFreeChart chart = ChartFactory.createXYLineChart("Velocidad", "Tiempo (s)", "Velocidad (m/s)", dataset, PlotOrientation.VERTICAL, true, false, false);
        ChartPanel chartPanel = new ChartPanel(chart);

        jPanelResultado.removeAll(); 
        jPanelResultado.setLayout(new java.awt.BorderLayout());
        jPanelResultado.add(chartPanel);
        jPanelResultado.validate();
    }

    private void GraficaAlcanceMax() {

        String tiempoText = txtTiempo.getText();

        double tiempo = Double.parseDouble(tiempoText);

        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries alcanceMaximoSeries = new XYSeries("Alcance Máximo");

        for (int t = 0; t <= tiempo; t++) {
            double distancia = tp.alcancemax(velocidadI, angulo, t);
            alcanceMaximoSeries.add(t, distancia);
        }

        dataset.addSeries(alcanceMaximoSeries);

        JFreeChart chart = ChartFactory.createXYLineChart("Alcance Máximo", "Tiempo (s)", "Distancia (m)", dataset, PlotOrientation.VERTICAL, true, false, false);
        ChartPanel chartPanel = new ChartPanel(chart);

        jPanelResultado.removeAll(); // Limpiar el panel anterior
        jPanelResultado.setLayout(new java.awt.BorderLayout());
        jPanelResultado.add(chartPanel);
        jPanelResultado.validate();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Resultado;
    private javax.swing.JButton btnGraficar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVel;
    private javax.swing.JButton calcAlcanceBtn;
    private javax.swing.JButton calcAltBtn;
    private javax.swing.JButton calcTiempoVueloBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanelResultado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtAng;
    private javax.swing.JTextField txtTiempo;
    private javax.swing.JTextField txtVel;
    // End of variables declaration//GEN-END:variables
}
